import discord
from typing import List, Tuple
from .base import BaseCommandHandler, CommandContext

class HelpCommandHandler(BaseCommandHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã help."""

    def __init__(self, logger=None):
        super().__init__(db=None, logger=logger)
        self.commands: List[Tuple[str, str]] = [
            ("!add <–æ–ø–∏—Å–∞–Ω–∏–µ>", "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É"),
            ("!list [—Å—Ç—Ä–∞–Ω–∏—Ü–∞]", "–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ –∑–∞–¥–∞—á–∏ (—Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π)"),
            ("!done <id>", "–û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é"),
            ("!undone <id>", "–û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é"),
            ("!delete <id>", "–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É"),
            ("!help", "–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
        ]

    async def handle(self, ctx: CommandContext, *args, **kwargs) -> None:
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã –ø–æ–º–æ—â–∏."""
        await self.show_help(ctx)

    async def show_help(self, ctx: CommandContext) -> None:
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º."""
        embed = discord.Embed(
            title="üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º Task Manager Bot",
            description="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏:",
            color=discord.Color.blue()
        )
        
        for command, description in self.commands:
            embed.add_field(name=command, value=description, inline=False)
        
        embed.set_footer(text="–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")
        
        await ctx.send(embed=embed)
        self.logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º")